
// This file has been generated by the GUI designer. Do not modify.
namespace Do.UI
{
	public partial class PluginConfigurationWindow
	{
		private global::Gtk.VBox vbox2;
		private global::Gtk.HBox hbox2;
		private global::Gtk.Image addin_title_img;
		private global::Gtk.Label addin_title_lbl;
		private global::Gtk.Notebook notebook;
		private global::Gtk.Label label2;
		private global::Gtk.HButtonBox hbuttonbox2;
		private global::Gtk.Button btn_close;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Do.UI.PluginConfigurationWindow
			this.Name = "Do.UI.PluginConfigurationWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("PluginConfigurationWindow");
			this.Icon = global::Stetic.IconLoader.LoadIcon (this, "gtk-preferences", global::Gtk.IconSize.Menu);
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			this.BorderWidth = ((uint)(6));
			this.DefaultWidth = 400;
			this.DefaultHeight = 400;
			// Container child Do.UI.PluginConfigurationWindow.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.addin_title_img = new global::Gtk.Image ();
			this.addin_title_img.Name = "addin_title_img";
			this.addin_title_img.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dialog-info", global::Gtk.IconSize.Menu);
			this.hbox2.Add (this.addin_title_img);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.addin_title_img]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.addin_title_lbl = new global::Gtk.Label ();
			this.addin_title_lbl.Name = "addin_title_lbl";
			this.addin_title_lbl.LabelProp = global::Mono.Unix.Catalog.GetString ("<span size=\"large\" weight=\"heavy\">Plugin name here</span>");
			this.addin_title_lbl.UseMarkup = true;
			this.hbox2.Add (this.addin_title_lbl);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.addin_title_lbl]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			this.vbox2.Add (this.hbox2);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbox2]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.notebook = new global::Gtk.Notebook ();
			this.notebook.CanFocus = true;
			this.notebook.Name = "notebook";
			this.notebook.CurrentPage = 0;
			// Notebook tab
			global::Gtk.Label w4 = new global::Gtk.Label ();
			w4.Visible = true;
			this.notebook.Add (w4);
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("page1");
			this.notebook.SetTabLabel (w4, this.label2);
			this.label2.ShowAll ();
			this.vbox2.Add (this.notebook);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.notebook]));
			w5.Position = 1;
			// Container child vbox2.Gtk.Box+BoxChild
			this.hbuttonbox2 = new global::Gtk.HButtonBox ();
			this.hbuttonbox2.Name = "hbuttonbox2";
			this.hbuttonbox2.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child hbuttonbox2.Gtk.ButtonBox+ButtonBoxChild
			this.btn_close = new global::Gtk.Button ();
			this.btn_close.CanFocus = true;
			this.btn_close.Name = "btn_close";
			this.btn_close.UseStock = true;
			this.btn_close.UseUnderline = true;
			this.btn_close.Label = "gtk-close";
			this.hbuttonbox2.Add (this.btn_close);
			global::Gtk.ButtonBox.ButtonBoxChild w6 = ((global::Gtk.ButtonBox.ButtonBoxChild)(this.hbuttonbox2 [this.btn_close]));
			w6.Expand = false;
			w6.Fill = false;
			this.vbox2.Add (this.hbuttonbox2);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.hbuttonbox2]));
			w7.Position = 2;
			w7.Expand = false;
			w7.Fill = false;
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.btn_close.Clicked += new global::System.EventHandler (this.OnBtnCloseClicked);
		}
	}
}
