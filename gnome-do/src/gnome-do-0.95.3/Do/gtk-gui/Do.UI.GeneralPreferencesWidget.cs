
// This file has been generated by the GUI designer. Do not modify.
namespace Do.UI
{
	public partial class GeneralPreferencesWidget
	{
		private global::Gtk.Alignment alignment4;
		private global::Gtk.VBox vbox1;
		private global::Gtk.Label label1;
		private global::Gtk.Alignment alignment2;
		private global::Gtk.VBox vbox4;
		private global::Gtk.CheckButton login_check;
		private global::Gtk.CheckButton hide_check;
		private global::Gtk.CheckButton notification_check;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Do.UI.GeneralPreferencesWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "Do.UI.GeneralPreferencesWidget";
			// Container child Do.UI.GeneralPreferencesWidget.Gtk.Container+ContainerChild
			this.alignment4 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment4.Name = "alignment4";
			this.alignment4.BorderWidth = ((uint)(10));
			// Container child alignment4.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 0F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>First-launch Behavior</b>");
			this.label1.UseMarkup = true;
			this.vbox1.Add (this.label1);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.label1]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.alignment2 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment2.Name = "alignment2";
			this.alignment2.LeftPadding = ((uint)(20));
			this.alignment2.BottomPadding = ((uint)(10));
			// Container child alignment2.Gtk.Container+ContainerChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 6;
			// Container child vbox4.Gtk.Box+BoxChild
			this.login_check = new global::Gtk.CheckButton ();
			this.login_check.CanFocus = true;
			this.login_check.Name = "login_check";
			this.login_check.Label = global::Mono.Unix.Catalog.GetString ("Start GNOME Do at login.");
			this.login_check.DrawIndicator = true;
			this.login_check.UseUnderline = true;
			this.vbox4.Add (this.login_check);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.login_check]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.hide_check = new global::Gtk.CheckButton ();
			this.hide_check.CanFocus = true;
			this.hide_check.Name = "hide_check";
			this.hide_check.Label = global::Mono.Unix.Catalog.GetString ("Hide window on first launch (quiet mode).");
			this.hide_check.DrawIndicator = true;
			this.hide_check.UseUnderline = true;
			this.vbox4.Add (this.hide_check);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.hide_check]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.notification_check = new global::Gtk.CheckButton ();
			this.notification_check.CanFocus = true;
			this.notification_check.Name = "notification_check";
			this.notification_check.Label = global::Mono.Unix.Catalog.GetString ("Show notification icon");
			this.notification_check.DrawIndicator = true;
			this.notification_check.UseUnderline = true;
			this.vbox4.Add (this.notification_check);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.notification_check]));
			w4.Position = 2;
			w4.Expand = false;
			w4.Fill = false;
			this.alignment2.Add (this.vbox4);
			this.vbox1.Add (this.alignment2);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.alignment2]));
			w6.Position = 1;
			w6.Expand = false;
			w6.Fill = false;
			this.alignment4.Add (this.vbox1);
			this.Add (this.alignment4);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.login_check.Clicked += new global::System.EventHandler (this.OnLoginCheckClicked);
			this.hide_check.Clicked += new global::System.EventHandler (this.OnHideCheckClicked);
			this.notification_check.Clicked += new global::System.EventHandler (this.OnNotificationCheckClicked);
		}
	}
}
